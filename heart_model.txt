import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

df = pd.read_csv("Heart.csv")

df.head()

df = df.drop('Unnamed: 0', axis =1)

df.head()

df.shape

df.info()

df = df.dropna()

df['AHD']=df['AHD'].replace({'Yes':0,'No':1})

df['ChestPain']=df['ChestPain'].replace({'typical':0,'asymptomatic':1, 'nonanginal':2, 'nontypical':3})

df['Thal']=df['Thal'].replace({'fixed':0,'normal':1,'reversable':2})

df.head()

X = df[['Sex','ChestPain','RestBP','Chol','Fbs','RestECG','MaxHR','ExAng','Oldpeak','Slope','Ca','Thal']]
y = df['AHD']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

print(X.shape, X_train.shape, X_test.shape)

print(y.shape, y_train.shape, y_test.shape)

model = LogisticRegression()

model.fit(X_train, y_train)

X_train_prediction = model.predict(X_train)
X_train_accuracy = accuracy_score(X_train_prediction, y_train)
print("Accuracy on training dataset: ", X_train_accuracy)

X_test_prediction = model.predict(X_test)
X_test_accuracy = accuracy_score(X_test_prediction, y_test)
print("Accuracy on testing dataset: ", X_test_accuracy)

